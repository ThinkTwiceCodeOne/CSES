#include<bits/stdc++.h>
using namespace std;
int solve(string s1,string s2,int n,int m,vector<vector<int>>& dp)
{
	if(n<0) return m+1;
	if(m<0) return n+1;
	if(dp[n][m]!=-1) return dp[n][m];
	if(s1[n]==s2[m]) return dp[n][m]=solve(s1,s2,n-1,m-1,dp);
	return dp[n][m]=1+min(solve(s1,s2,n-1,m,dp),
			min(solve(s1,s2,n,m-1,dp),solve(s1,s2,n-1,m-1,dp)));
}
int main()
{
	string s1,s2;
	cin>>s1>>s2;
	int n=s1.size();
	int m=s2.size();
	vector<vector<int>> dp(n+1,vector<int>(m+1,-1));
	for(int i=0;i<=n;i++) dp[i][0]=i;
	for(int j=0;j<=m;j++) dp[0][j]=j;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
			if(s1[i-1]==s2[j-1]) dp[i][j]=dp[i-1][j-1];
			else dp[i][j]=1+min(dp[i-1][j],
					min(dp[i][j-1],dp[i-1][j-1]));
		}
	}
	cout<<dp[n][m]<<endl;
	return 0;
}
